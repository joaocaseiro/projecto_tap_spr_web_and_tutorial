<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE web-app
        PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
        "http://java.sun.com/dtd/web-app_2_3.dtd">
<web-app>
	<display-name>celebrities Tapestry Application</display-name>
	<context-param>
		<!-- The only significant configuration for Tapestry 5, this informs Tapestry 
			of where to look for pages, components and mixins. -->
		<param-name>tapestry.app-package</param-name>
		<param-value>com.grupoatwork.celebrity</param-value>
	</context-param>
	<!-- Specify some additional Modules for two different execution modes: 
		development and qa. Remember that the default execution mode is production -->
	<context-param>
		<param-name>tapestry.development-modules</param-name>
		<param-value>
			com.project.celebrities.services.DevelopmentModule
		</param-value>
	</context-param>
	<context-param>
		<param-name>tapestry.qa-modules</param-name>
		<param-value>
			com.project.celebrities.services.QaModule
		</param-value>
	</context-param>
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/applicationContext.xml</param-value>
	</context-param>

	<servlet>
		<description>JAX-RS Tools Generated - Do not modify</description>
		<servlet-name>JAX-RS Servlet</servlet-name>
		<servlet-class>com.sun.jersey.spi.container.servlet.ServletContainer</servlet-class>
		<init-param>
			<param-name>com.sun.jersey.config.property.resourceConfigClass</param-name>
			<param-value>com.sun.jersey.api.core.PackagesResourceConfig</param-value>
		</init-param>
		<init-param>
			<param-name>com.sun.jersey.config.property.packages</param-name>
			<param-value>com.grupoatwork.celebrity.webservices</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>JAX-RS Servlet</servlet-name>
		<url-pattern>/jaxrs/*</url-pattern>
	</servlet-mapping>

	<filter>
		<filter-name>JpaFilter</filter-name>
		<filter-class>org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>JpaFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter>
		<filter-name>app</filter-name>
		<!-- Special filter that adds in a T5 IoC module derived from the Spring 
			WebApplicationContext. -->
		<filter-class>org.apache.tapestry5.spring.TapestrySpringFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>app</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
</web-app>